{"ast":null,"code":"var _jsxFileName = \"/Users/seokhyunkim/Desktop/projects/coronavirus/src/components/Home/Charts.js\";\nimport React, { PureComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nconst data = [{\n  name: \"Page A\",\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: \"Page B\",\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: \"Page C\",\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: \"Page D\",\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: \"Page E\",\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: \"Page F\",\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: \"Page G\",\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\nexport default class Example extends PureComponent {\n  constructor() {\n    super();\n\n    this.getUSTotalCases = () => {\n      function isUS(val) {\n        return val.Country_Region === \"US\";\n      }\n\n      let filtered = this.state.cases.filter(isUS);\n      let sum = 0;\n      filtered.forEach(elem => sum = sum + elem.Confirmed);\n      return sum;\n    };\n\n    this.casesByState = s => {\n      s = s.charAt(0).toUpperCase() + s.slice(1);\n      let filtered = this.state.cases.filter(elem => elem.Province_State === s);\n      let sum = 0;\n      filtered.forEach(elem => sum = sum + elem.Confirmed);\n      return sum;\n    };\n\n    this.state = {\n      cases: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/cases\").then(res => res.json()).then(cases => this.setState({\n      cases\n    }));\n  }\n\n  render() {\n    const {\n      cases\n    } = this.state;\n    console.log(cases);\n    console.log(cases[1]);\n    console.log(this.casesByState(\"illinois\"));\n    return React.createElement(\"chartWrapper\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      width: 500,\n      height: 300,\n      data: data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"pv\",\n      stroke: \"#8884d8\",\n      activeDot: {\n        r: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"uv\",\n      stroke: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })));\n  }\n\n}\nconst chartWrapper = styled.div`\n  margin: 0;\n`;","map":{"version":3,"sources":["/Users/seokhyunkim/Desktop/projects/coronavirus/src/components/Home/Charts.js"],"names":["React","PureComponent","styled","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","data","name","uv","pv","amt","Example","constructor","getUSTotalCases","isUS","val","Country_Region","filtered","state","cases","filter","sum","forEach","elem","Confirmed","casesByState","s","charAt","toUpperCase","slice","Province_State","componentDidMount","fetch","then","res","json","setState","render","console","log","top","right","left","bottom","r","chartWrapper","div"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100\n  }\n];\n\nexport default class Example extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      cases: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/cases\")\n      .then(res => res.json())\n      .then(cases => this.setState({ cases }));\n  }\n\n  getUSTotalCases = () => {\n    function isUS(val) {\n      return val.Country_Region === \"US\";\n    }\n    let filtered = this.state.cases.filter(isUS);\n    let sum = 0;\n    filtered.forEach(elem => (sum = sum + elem.Confirmed));\n    return sum;\n  };\n\n  casesByState = s => {\n    s = s.charAt(0).toUpperCase() + s.slice(1);\n    let filtered = this.state.cases.filter(elem => elem.Province_State === s);\n    let sum = 0;\n    filtered.forEach(elem => (sum = sum + elem.Confirmed));\n    return sum;\n  };\n\n  render() {\n    const { cases } = this.state;\n    console.log(cases);\n    console.log(cases[1]);\n    console.log(this.casesByState(\"illinois\"));\n\n    return (\n      <chartWrapper>\n        <LineChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey=\"pv\"\n            stroke=\"#8884d8\"\n            activeDot={{ r: 8 }}\n          />\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n        </LineChart>\n      </chartWrapper>\n    );\n  }\n}\n\nconst chartWrapper = styled.div`\n  margin: 0;\n`;\n"]},"metadata":{},"sourceType":"module"}