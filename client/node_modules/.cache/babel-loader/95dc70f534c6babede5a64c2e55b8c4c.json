{"ast":null,"code":"var _jsxFileName = \"/Users/seokhyunkim/Desktop/projects/coronavirus/src/components/Home/Charts.js\";\nimport React, { PureComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\"; // const data = [\n//   {\n//     name: \"Page A\",\n//     uv: 4000,\n//     pv: 2400,\n//     amt: 2400\n//   },\n//   {\n//     name: \"Page B\",\n//     uv: 3000,\n//     pv: 1398,\n//     amt: 2210\n//   },\n//   {\n//     name: \"Page C\",\n//     uv: 2000,\n//     pv: 9800,\n//     amt: 2290\n//   },\n//   {\n//     name: \"Page D\",\n//     uv: 2780,\n//     pv: 3908,\n//     amt: 2000\n//   },\n//   {\n//     name: \"Page E\",\n//     uv: 1890,\n//     pv: 4800,\n//     amt: 2181\n//   },\n//   {\n//     name: \"Page F\",\n//     uv: 2390,\n//     pv: 3800,\n//     amt: 2500\n//   },\n//   {\n//     name: \"Page G\",\n//     uv: 3490,\n//     pv: 4300,\n//     amt: 2100\n//   }\n// ];\n\nexport default class Example extends PureComponent {\n  constructor() {\n    super();\n\n    this.getUSTotalCases = cases => {\n      function isUS(val) {\n        return val.Country_Region === \"US\";\n      }\n\n      let filtered = cases.filter(isUS);\n      let sum = 0;\n      filtered.forEach(elem => sum = sum + elem.Confirmed);\n      return sum;\n    };\n\n    this.casesByState = s => {\n      s = s.charAt(0).toUpperCase() + s.slice(1);\n      let filtered = this.state.cases.filter(elem => elem.Province_State === s);\n      let sum = 0;\n      filtered.forEach(elem => sum = sum + elem.Confirmed);\n      return sum;\n    };\n\n    this.state = {\n      cases1: [],\n      cases5: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/cases1\").then(res => res.json()).then(cases1 => this.setState({\n      cases1\n    }));\n    fetch(\"http://localhost:5000/cases5\").then(res => res.json()).then(cases5 => this.setState({\n      cases5\n    }));\n  } // get the total number of confirmed cases in the US\n\n\n  render() {\n    const {\n      cases1,\n      cases5\n    } = this.state;\n    console.log(cases1[1].Province_State);\n    console.log(cases[1]);\n    const data = [{\n      name: cases1[0],\n      confirmed: this.getUSTotalCases(cases1)\n    }, {\n      name: cases5.Last_Update,\n      confirmed: this.getUSTotalCases(cases5)\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      width: 500,\n      height: 300,\n      data: data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"pv\",\n      stroke: \"#8884d8\",\n      activeDot: {\n        r: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"uv\",\n      stroke: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/seokhyunkim/Desktop/projects/coronavirus/src/components/Home/Charts.js"],"names":["React","PureComponent","styled","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Example","constructor","getUSTotalCases","cases","isUS","val","Country_Region","filtered","filter","sum","forEach","elem","Confirmed","casesByState","s","charAt","toUpperCase","slice","state","Province_State","cases1","cases5","componentDidMount","fetch","then","res","json","setState","render","console","log","data","name","confirmed","Last_Update","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\n// const data = [\n//   {\n//     name: \"Page A\",\n//     uv: 4000,\n//     pv: 2400,\n//     amt: 2400\n//   },\n//   {\n//     name: \"Page B\",\n//     uv: 3000,\n//     pv: 1398,\n//     amt: 2210\n//   },\n//   {\n//     name: \"Page C\",\n//     uv: 2000,\n//     pv: 9800,\n//     amt: 2290\n//   },\n//   {\n//     name: \"Page D\",\n//     uv: 2780,\n//     pv: 3908,\n//     amt: 2000\n//   },\n//   {\n//     name: \"Page E\",\n//     uv: 1890,\n//     pv: 4800,\n//     amt: 2181\n//   },\n//   {\n//     name: \"Page F\",\n//     uv: 2390,\n//     pv: 3800,\n//     amt: 2500\n//   },\n//   {\n//     name: \"Page G\",\n//     uv: 3490,\n//     pv: 4300,\n//     amt: 2100\n//   }\n// ];\n\nexport default class Example extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      cases1: [],\n      cases5: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/cases1\")\n      .then(res => res.json())\n      .then(cases1 => this.setState({ cases1 }));\n\n    fetch(\"http://localhost:5000/cases5\")\n      .then(res => res.json())\n      .then(cases5 => this.setState({ cases5 }));\n  }\n\n  // get the total number of confirmed cases in the US\n  getUSTotalCases = cases => {\n    function isUS(val) {\n      return val.Country_Region === \"US\";\n    }\n    let filtered = cases.filter(isUS);\n    let sum = 0;\n    filtered.forEach(elem => (sum = sum + elem.Confirmed));\n    return sum;\n  };\n\n  // get the total number of cases in the US by state\n  casesByState = s => {\n    s = s.charAt(0).toUpperCase() + s.slice(1);\n    let filtered = this.state.cases.filter(elem => elem.Province_State === s);\n    let sum = 0;\n    filtered.forEach(elem => (sum = sum + elem.Confirmed));\n    return sum;\n  };\n\n  render() {\n    const { cases1, cases5 } = this.state;\n    console.log(cases1[1].Province_State);\n    console.log(cases[1]);\n    const data = [\n      {\n        name: cases1[0],\n        confirmed: this.getUSTotalCases(cases1)\n      },\n      {\n        name: cases5.Last_Update,\n        confirmed: this.getUSTotalCases(cases5)\n      }\n    ];\n\n    return (\n      <div>\n        <LineChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey=\"pv\"\n            stroke=\"#8884d8\"\n            activeDot={{ r: 8 }}\n          />\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n        </LineChart>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}