{"ast":null,"code":"var _jsxFileName = \"/Users/seokhyunkim/Desktop/projects/coronavirus/client/src/components/Home/Charts.js\";\nimport React, { PureComponent } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { serverURL } from \"../../Config\";\nexport default class Example extends PureComponent {\n  constructor() {\n    super(); // cases in date order from 1 to 5. Cases5 is the latest.\n\n    this.getCaseData = index => {\n      (async () => {\n        try {\n          const res = await axios.get(serverURL + `/api/cases/${index}`);\n          this.setState({\n            [`cases${index}`]: res.data\n          });\n        } catch (err) {\n          console.log(\"Case data load failed: \" + err);\n        }\n      })();\n    };\n\n    this.getUSTotalCases = cases => {\n      let filtered = cases.filter(elem => elem.Country_Region === \"US\");\n      let sum = 0;\n      filtered.forEach(elem => sum = sum + elem.Confirmed);\n      return sum;\n    };\n\n    this.casesByState = (caseNum, s) => {\n      s = s.charAt(0).toUpperCase() + s.slice(1);\n      let filtered = caseNum.filter(elem => elem.Province_State === s);\n      let sum = 0;\n      filtered.forEach(elem => sum = sum + elem.Confirmed);\n      return sum;\n    };\n\n    this.state = {\n      cases1: [],\n      cases2: [],\n      cases3: [],\n      cases4: [],\n      cases5: []\n    };\n  }\n\n  componentDidMount() {\n    for (let i = 1; i < 6; i++) {\n      this.getCaseData(i);\n    }\n  } // case data fetch function from server\n\n\n  render() {\n    const {\n      cases1,\n      cases2,\n      cases3,\n      cases4,\n      cases5\n    } = this.state;\n    let us_data = [],\n        il_data = [];\n\n    if (cases1.length > 0 && cases2.length > 0 && cases3.length > 0 && cases4.length > 0 && cases5.length > 0) {\n      us_data = [{\n        name: cases1[0].Last_Update.substring(0, 11),\n        confirmed: this.getUSTotalCases(cases1)\n      }, {\n        name: cases2[0].Last_Update.substring(0, 11),\n        confirmed: this.getUSTotalCases(cases2)\n      }, {\n        name: cases3[0].Last_Update.substring(0, 11),\n        confirmed: this.getUSTotalCases(cases3)\n      }, {\n        name: cases4[0].Last_Update.substring(0, 11),\n        confirmed: this.getUSTotalCases(cases4)\n      }, {\n        name: cases5[0].Last_Update.substring(0, 11),\n        confirmed: this.getUSTotalCases(cases5)\n      }];\n      il_data = [{\n        name: cases1[0].Last_Update.substring(0, 11),\n        confirmed: this.casesByState(cases1, \"illinois\")\n      }, {\n        name: cases2[0].Last_Update.substring(0, 11),\n        confirmed: this.casesByState(cases2, \"illinois\")\n      }, {\n        name: cases3[0].Last_Update.substring(0, 11),\n        confirmed: this.casesByState(cases3, \"illinois\")\n      }, {\n        name: cases4[0].Last_Update.substring(0, 11),\n        confirmed: this.casesByState(cases4, \"illinois\")\n      }, {\n        name: cases5[0].Last_Update.substring(0, 11),\n        confirmed: this.casesByState(cases5, \"illinois\")\n      }];\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart-container\",\n      style: {\n        display: \"flex\",\n        marginTop: \"3.5rem\",\n        marginLeft: \"0\",\n        backgroundColor: \"black\",\n        marginBottom: \"12.0rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        textAlign: \"center\",\n        textTransform: \"capitalize\",\n        marginBottom: \"-30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"US total confirmed cases\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"auto\",\n        marginTop: \"3.5rem\",\n        width: \"50%\",\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      width: 600,\n      height: 300,\n      data: us_data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"confirmed\",\n      stroke: \"green\",\n      activeDot: {\n        r: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        textAlign: \"center\",\n        textTransform: \"capitalize\",\n        marginBottom: \"-30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, \"illinois total confirmed cases\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"auto\",\n        marginTop: \"3.5rem\",\n        width: \"50%\",\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      width: 600,\n      height: 300,\n      data: il_data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"confirmed\",\n      stroke: \"blue\",\n      activeDot: {\n        r: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/seokhyunkim/Desktop/projects/coronavirus/client/src/components/Home/Charts.js"],"names":["React","PureComponent","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","serverURL","Example","constructor","getCaseData","index","res","get","setState","data","err","console","log","getUSTotalCases","cases","filtered","filter","elem","Country_Region","sum","forEach","Confirmed","casesByState","caseNum","s","charAt","toUpperCase","slice","Province_State","state","cases1","cases2","cases3","cases4","cases5","componentDidMount","i","render","us_data","il_data","length","name","Last_Update","substring","confirmed","display","marginTop","marginLeft","backgroundColor","marginBottom","textAlign","textTransform","margin","width","padding","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport axios from \"axios\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport { serverURL } from \"../../Config\";\n\nexport default class Example extends PureComponent {\n  constructor() {\n    super();\n    // cases in date order from 1 to 5. Cases5 is the latest.\n    this.state = {\n      cases1: [],\n      cases2: [],\n      cases3: [],\n      cases4: [],\n      cases5: [],\n    };\n  }\n\n  componentDidMount() {\n    for (let i = 1; i < 6; i++) {\n      this.getCaseData(i);\n    }\n  }\n\n  // case data fetch function from server\n  getCaseData = (index) => {\n    (async () => {\n      try {\n        const res = await axios.get(serverURL + `/api/cases/${index}`);\n        this.setState({ [`cases${index}`]: res.data });\n      } catch (err) {\n        console.log(\"Case data load failed: \" + err);\n      }\n    })();\n  };\n\n  // get the total number of confirmed cases in the US\n  getUSTotalCases = (cases) => {\n    let filtered = cases.filter((elem) => elem.Country_Region === \"US\");\n    let sum = 0;\n    filtered.forEach((elem) => (sum = sum + elem.Confirmed));\n    return sum;\n  };\n\n  // get the total number of confirmed cases in the US by state\n  casesByState = (caseNum, s) => {\n    s = s.charAt(0).toUpperCase() + s.slice(1);\n    let filtered = caseNum.filter((elem) => elem.Province_State === s);\n    let sum = 0;\n    filtered.forEach((elem) => (sum = sum + elem.Confirmed));\n    return sum;\n  };\n\n  render() {\n    const { cases1, cases2, cases3, cases4, cases5 } = this.state;\n\n    let us_data = [],\n      il_data = [];\n    if (\n      cases1.length > 0 &&\n      cases2.length > 0 &&\n      cases3.length > 0 &&\n      cases4.length > 0 &&\n      cases5.length > 0\n    ) {\n      us_data = [\n        {\n          name: cases1[0].Last_Update.substring(0, 11),\n          confirmed: this.getUSTotalCases(cases1),\n        },\n        {\n          name: cases2[0].Last_Update.substring(0, 11),\n          confirmed: this.getUSTotalCases(cases2),\n        },\n        {\n          name: cases3[0].Last_Update.substring(0, 11),\n          confirmed: this.getUSTotalCases(cases3),\n        },\n        {\n          name: cases4[0].Last_Update.substring(0, 11),\n          confirmed: this.getUSTotalCases(cases4),\n        },\n        {\n          name: cases5[0].Last_Update.substring(0, 11),\n          confirmed: this.getUSTotalCases(cases5),\n        },\n      ];\n\n      il_data = [\n        {\n          name: cases1[0].Last_Update.substring(0, 11),\n          confirmed: this.casesByState(cases1, \"illinois\"),\n        },\n        {\n          name: cases2[0].Last_Update.substring(0, 11),\n          confirmed: this.casesByState(cases2, \"illinois\"),\n        },\n        {\n          name: cases3[0].Last_Update.substring(0, 11),\n          confirmed: this.casesByState(cases3, \"illinois\"),\n        },\n        {\n          name: cases4[0].Last_Update.substring(0, 11),\n          confirmed: this.casesByState(cases4, \"illinois\"),\n        },\n        {\n          name: cases5[0].Last_Update.substring(0, 11),\n          confirmed: this.casesByState(cases5, \"illinois\"),\n        },\n      ];\n    }\n    return (\n      <div\n        className=\"chart-container\"\n        style={{\n          display: \"flex\",\n          marginTop: \"3.5rem\",\n          marginLeft: \"0\",\n          backgroundColor: \"black\",\n          marginBottom: \"12.0rem\",\n        }}\n      >\n        {/* US cases chart */}\n\n        <div>\n          <h4\n            style={{\n              textAlign: \"center\",\n              textTransform: \"capitalize\",\n              marginBottom: \"-30px\",\n            }}\n          >\n            US total confirmed cases\n          </h4>\n          <div\n            style={{\n              margin: \"auto\",\n              marginTop: \"3.5rem\",\n\n              width: \"50%\",\n              padding: \"10px\",\n            }}\n          >\n            <LineChart\n              width={600}\n              height={300}\n              data={us_data}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line\n                type=\"monotone\"\n                dataKey=\"confirmed\"\n                stroke=\"green\"\n                activeDot={{ r: 5 }}\n              />\n            </LineChart>\n          </div>\n        </div>\n\n        {/* Illinois cases chart */}\n\n        <div>\n          <h4\n            style={{\n              textAlign: \"center\",\n              textTransform: \"capitalize\",\n              marginBottom: \"-30px\",\n            }}\n          >\n            illinois total confirmed cases\n          </h4>\n          <div\n            style={{\n              margin: \"auto\",\n              marginTop: \"3.5rem\",\n              width: \"50%\",\n              padding: \"10px\",\n            }}\n          >\n            <LineChart\n              width={600}\n              height={300}\n              data={il_data}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line\n                type=\"monotone\"\n                dataKey=\"confirmed\"\n                stroke=\"blue\"\n                activeDot={{ r: 5 }}\n              />\n            </LineChart>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}