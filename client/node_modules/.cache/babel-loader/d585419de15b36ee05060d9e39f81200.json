{"ast":null,"code":"var _jsxFileName = \"/Users/seokhyunkim/Desktop/projects/coronavirus/src/components/Board/Comment.js\";\nimport React, { Component } from \"react\";\nimport \"../../App.css\";\nexport class Comment extends Component {\n  constructor() {\n    super();\n\n    this.updateInput = e => {\n      this.setState({\n        newComment: {\n          id: 1 + Math.random(),\n          text: e.target.value\n        }\n      });\n    };\n\n    this.addComment = e => {\n      e.preventDefault();\n      const currentComment = this.state.newComment;\n\n      if (currentComment.text !== \"\") {\n        const comments = [...this.state.comments, currentComment];\n        this.setState({\n          comments,\n          newComment: {\n            id: 0,\n            text: \"\"\n          }\n        });\n      }\n    };\n\n    this.updateInput = this.updateInput.bind(this);\n    this.addComment = this.addComment.bind(this);\n    this.state = {\n      comments: [],\n      newComment: {\n        id: 0,\n        text: \"\"\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-1.5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"commentSection\",\n      row: \"5\",\n      col: \"30\",\n      placeholder: \"Write your comment...\",\n      onChange: () => this.updateInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-primary\",\n      type: \"submit\",\n      style: {\n        marginTop: \"-20px\"\n      },\n      onClick: () => this.addComment(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Submit\"))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.list.map(item => {\n      return React.createElement(\"li\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, item.value);\n    }))));\n  }\n\n}\nexport default Comment;","map":{"version":3,"sources":["/Users/seokhyunkim/Desktop/projects/coronavirus/src/components/Board/Comment.js"],"names":["React","Component","Comment","constructor","updateInput","e","setState","newComment","id","Math","random","text","target","value","addComment","preventDefault","currentComment","state","comments","bind","render","marginTop","list","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../App.css\";\n\nexport class Comment extends Component {\n  constructor() {\n    super();\n    this.updateInput = this.updateInput.bind(this);\n    this.addComment = this.addComment.bind(this);\n\n    this.state = {\n      comments: [],\n      newComment: {\n        id: 0,\n        text: \"\"\n      }\n    };\n  }\n\n  updateInput = e => {\n    this.setState({\n      newComment: {\n        id: 1 + Math.random(),\n        text: e.target.value\n      }\n    });\n  };\n\n  addComment = e => {\n    e.preventDefault();\n    const currentComment = this.state.newComment;\n    if (currentComment.text !== \"\") {\n      const comments = [...this.state.comments, currentComment];\n      this.setState({\n        comments,\n        newComment: {\n          id: 0,\n          text: \"\"\n        }\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {/* new comment section */}\n        <form>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-1.5\"></div>\n              <div className=\"col-12\">\n                <textarea\n                  id=\"commentSection\"\n                  row=\"5\"\n                  col=\"30\"\n                  placeholder=\"Write your comment...\"\n                  onChange={() => this.updateInput()}\n                ></textarea>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-9\"></div>\n              <div className=\"col-1\">\n                <button\n                  className=\"btn btn-outline-primary\"\n                  type=\"submit\"\n                  style={{ marginTop: \"-20px\" }}\n                  onClick={() => this.addComment()}\n                >\n                  Submit\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n\n        {/* list of comments */}\n        <div>\n          <ul>\n            {this.state.list.map(item => {\n              return <li key={item.id}>{item.value}</li>;\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}