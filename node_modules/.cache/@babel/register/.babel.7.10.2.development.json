{
  "{\"sourceRoot\":\"/Users/seokhyunkim/Desktop/projects/coronavirus/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/seokhyunkim/Desktop/projects/coronavirus\",\"filename\":\"/Users/seokhyunkim/Desktop/projects/coronavirus/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/seokhyunkim/Desktop/projects/coronavirus\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/seokhyunkim/Desktop/projects/coronavirus/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/seokhyunkim/Desktop/projects/coronavirus",
      "filename": "/Users/seokhyunkim/Desktop/projects/coronavirus/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/seokhyunkim/Desktop/projects/coronavirus",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/seokhyunkim/Desktop/projects/coronavirus/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/seokhyunkim/Desktop/projects/coronavirus/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/seokhyunkim/Desktop/projects/coronavirus/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require(\"express\");\n\nvar _require = require(\"mongodb\"),\n    MongoClient = _require.MongoClient;\n\nvar path = require(\"path\");\n\nvar cors = require(\"cors\");\n\nvar app = express();\nvar port = process.env.PORT || 5000;\napp.use(cors());\napp.use(express[\"static\"](path.join(__dirname, \"client\", \"build\")));\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"dotenv\").config();\n}\n\nvar uri = \"mongodb+srv://will:\".concat(process.env.USER_PASSWORD, \"@cluster1-glamp.mongodb.net/covid19?retryWrites=true&w=majority\");\nvar client = new MongoClient(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\nfunction isDatabaseConnected(_x) {\n  return _isDatabaseConnected.apply(this, arguments);\n}\n\nfunction _isDatabaseConnected() {\n  _isDatabaseConnected = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(client) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return client.connect();\n\n          case 3:\n            console.log(\"Database is connected\");\n            _context2.next = 10;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"Database connection failed\");\n            console.error(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 6]]);\n  }));\n  return _isDatabaseConnected.apply(this, arguments);\n}\n\nisDatabaseConnected(client)[\"catch\"](console.err);\napp.get(\"/api/cases/:id\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var cursor, data, _data, _data2, _data3, _data4;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(req.params.id === \"1\")) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return client.db(\"covid19\").collection(\"060620\").find({});\n\n          case 4:\n            cursor = _context.sent;\n            _context.next = 7;\n            return cursor.toArray();\n\n          case 7:\n            data = _context.sent;\n            res.json(data);\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n            res.status(500).send({\n              error: _context.t0\n            });\n\n          case 15:\n            _context.next = 83;\n            break;\n\n          case 17:\n            if (!(req.params.id === \"2\")) {\n              _context.next = 34;\n              break;\n            }\n\n            _context.prev = 18;\n            _context.next = 21;\n            return client.db(\"covid19\").collection(\"060720\").find({});\n\n          case 21:\n            cursor = _context.sent;\n            _context.next = 24;\n            return cursor.toArray();\n\n          case 24:\n            _data = _context.sent;\n            res.json(_data);\n            _context.next = 32;\n            break;\n\n          case 28:\n            _context.prev = 28;\n            _context.t1 = _context[\"catch\"](18);\n            console.log(_context.t1);\n            res.status(500).send({\n              error: _context.t1\n            });\n\n          case 32:\n            _context.next = 83;\n            break;\n\n          case 34:\n            if (!(req.params.id === \"3\")) {\n              _context.next = 51;\n              break;\n            }\n\n            _context.prev = 35;\n            _context.next = 38;\n            return client.db(\"covid19\").collection(\"060820\").find({});\n\n          case 38:\n            cursor = _context.sent;\n            _context.next = 41;\n            return cursor.toArray();\n\n          case 41:\n            _data2 = _context.sent;\n            res.json(_data2);\n            _context.next = 49;\n            break;\n\n          case 45:\n            _context.prev = 45;\n            _context.t2 = _context[\"catch\"](35);\n            console.log(_context.t2);\n            res.status(500).send({\n              error: _context.t2\n            });\n\n          case 49:\n            _context.next = 83;\n            break;\n\n          case 51:\n            if (!(req.params.id === \"4\")) {\n              _context.next = 68;\n              break;\n            }\n\n            _context.prev = 52;\n            _context.next = 55;\n            return client.db(\"covid19\").collection(\"060920\").find({});\n\n          case 55:\n            cursor = _context.sent;\n            _context.next = 58;\n            return cursor.toArray();\n\n          case 58:\n            _data3 = _context.sent;\n            res.json(_data3);\n            _context.next = 66;\n            break;\n\n          case 62:\n            _context.prev = 62;\n            _context.t3 = _context[\"catch\"](52);\n            console.log(_context.t3);\n            res.status(500).send({\n              error: _context.t3\n            });\n\n          case 66:\n            _context.next = 83;\n            break;\n\n          case 68:\n            if (!(req.params.id === \"5\")) {\n              _context.next = 83;\n              break;\n            }\n\n            _context.prev = 69;\n            _context.next = 72;\n            return client.db(\"covid19\").collection(\"061020\").find({});\n\n          case 72:\n            cursor = _context.sent;\n            _context.next = 75;\n            return cursor.toArray();\n\n          case 75:\n            _data4 = _context.sent;\n            res.json(_data4);\n            _context.next = 83;\n            break;\n\n          case 79:\n            _context.prev = 79;\n            _context.t4 = _context[\"catch\"](69);\n            console.log(_context.t4);\n            res.status(500).send({\n              error: _context.t4\n            });\n\n          case 83:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11], [18, 28], [35, 45], [52, 62], [69, 79]]);\n  }));\n\n  return function (_x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.listen(port, function () {\n  return console.log(\"server running on port \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "MongoClient",
        "path",
        "cors",
        "app",
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "join",
        "__dirname",
        "NODE_ENV",
        "config",
        "uri",
        "USER_PASSWORD",
        "client",
        "useNewUrlParser",
        "useUnifiedTopology",
        "isDatabaseConnected",
        "connect",
        "console",
        "log",
        "error",
        "err",
        "get",
        "req",
        "res",
        "params",
        "id",
        "db",
        "collection",
        "find",
        "cursor",
        "toArray",
        "data",
        "json",
        "status",
        "send",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/seokhyunkim/Desktop/projects/coronavirus/",
      "sourcesContent": [
        "const express = require(\"express\");\nconst { MongoClient } = require(\"mongodb\");\nconst path = require(\"path\");\nconst cors = require(\"cors\");\nconst app = express();\nconst port = process.env.PORT || 5000;\n\napp.use(cors());\napp.use(express.static(path.join(__dirname, \"client\", \"build\")));\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"dotenv\").config();\n}\n\nconst uri = `mongodb+srv://will:${process.env.USER_PASSWORD}@cluster1-glamp.mongodb.net/covid19?retryWrites=true&w=majority`;\nconst client = new MongoClient(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n});\n\nasync function isDatabaseConnected(client) {\n  try {\n    await client.connect();\n    console.log(\"Database is connected\");\n  } catch (err) {\n    console.log(\"Database connection failed\");\n    console.error(err);\n  }\n}\n\nisDatabaseConnected(client).catch(console.err);\n\napp.get(\"/api/cases/:id\", async (req, res) => {\n  let cursor;\n  if (req.params.id === \"1\") {\n    try {\n      cursor = await client.db(\"covid19\").collection(\"060620\").find({});\n      const data = await cursor.toArray();\n      res.json(data);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ error: err });\n    }\n  } else if (req.params.id === \"2\") {\n    try {\n      cursor = await client.db(\"covid19\").collection(\"060720\").find({});\n      const data = await cursor.toArray();\n      res.json(data);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ error: err });\n    }\n  } else if (req.params.id === \"3\") {\n    try {\n      cursor = await client.db(\"covid19\").collection(\"060820\").find({});\n      const data = await cursor.toArray();\n      res.json(data);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ error: err });\n    }\n  } else if (req.params.id === \"4\") {\n    try {\n      cursor = await client.db(\"covid19\").collection(\"060920\").find({});\n      const data = await cursor.toArray();\n      res.json(data);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ error: err });\n    }\n  } else if (req.params.id === \"5\") {\n    try {\n      cursor = await client.db(\"covid19\").collection(\"061020\").find({});\n      const data = await cursor.toArray();\n      res.json(data);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ error: err });\n    }\n  }\n});\n\napp.listen(port, () => console.log(`server running on port ${port}`));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592028203123
  }
}