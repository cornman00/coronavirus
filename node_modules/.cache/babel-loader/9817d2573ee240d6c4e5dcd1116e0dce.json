{"ast":null,"code":"var _jsxFileName = \"/Users/seokhyunkim/Desktop/projects/coronavirus/src/components/Home/Charts.js\";\nimport React, { PureComponent } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nexport default class Example extends PureComponent {\n  constructor() {\n    super(); // cases in date order from 1 to 5. Cases5 is the latest.\n\n    this.getUSTotalCases = cases => {\n      function isUS(val) {\n        return val.Country_Region === \"US\";\n      }\n\n      let filtered = cases.filter(isUS);\n      let sum = 0;\n      filtered.forEach(elem => sum = sum + elem.Confirmed);\n      return sum;\n    };\n\n    this.casesByState = s => {\n      s = s.charAt(0).toUpperCase() + s.slice(1);\n      let filtered = this.state.cases.filter(elem => elem.Province_State === s);\n      let sum = 0;\n      filtered.forEach(elem => sum = sum + elem.Confirmed);\n      return sum;\n    };\n\n    this.state = {\n      cases1: [],\n      cases2: [],\n      cases3: [],\n      cases4: [],\n      cases5: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/cases1\").then(res => res.json()).then(cases1 => this.setState({\n      cases1\n    }));\n    fetch(\"http://localhost:5000/cases2\").then(res => res.json()).then(cases2 => this.setState({\n      cases2\n    }));\n    fetch(\"http://localhost:5000/cases3\").then(res => res.json()).then(cases3 => this.setState({\n      cases3\n    }));\n    fetch(\"http://localhost:5000/cases4\").then(res => res.json()).then(cases4 => this.setState({\n      cases4\n    }));\n    fetch(\"http://localhost:5000/cases5\").then(res => res.json()).then(cases5 => this.setState({\n      cases5\n    }));\n  } // get the total number of confirmed cases in the US\n\n\n  render() {\n    const {\n      cases1,\n      cases2,\n      cases3,\n      cases4,\n      cases5\n    } = this.state;\n    let us_data = [],\n        il_data = [];\n\n    if (cases1.length > 0 && cases2.length > 0 && cases3.length > 0 && cases4.length > 0 && cases5.length > 0) {\n      us_data = [{\n        name: cases1[0].Last_Update.substring(0, 11),\n        confirmed: this.getUSTotalCases(cases1)\n      }, {\n        name: cases2[0].Last_Update.substring(0, 11),\n        confirmed: this.getUSTotalCases(cases2)\n      }, {\n        name: cases3[0].Last_Update.substring(0, 11),\n        confirmed: this.getUSTotalCases(cases3)\n      }, {\n        name: cases4[0].Last_Update.substring(0, 11),\n        confirmed: this.getUSTotalCases(cases4)\n      }, {\n        name: cases5[0].Last_Update.substring(0, 11),\n        confirmed: this.getUSTotalCases(cases5)\n      }];\n    }\n\n    return React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        marginTop: \"3.5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      style: {\n        textAlign: \"center\",\n        textTransform: \"capitalize\",\n        marginBottom: \"-30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"US total confirmed cases\"), React.createElement(\"div\", {\n      style: {\n        margin: \"auto\",\n        marginTop: \"3.5rem\",\n        marginBottom: \"2.0rem\",\n        width: \"50%\",\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      width: 500,\n      height: 300,\n      data: us_data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"confirmed\",\n      stroke: \"#8884d8\",\n      activeDot: {\n        r: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      style: {\n        textAlign: \"center\",\n        textTransform: \"capitalize\",\n        marginBottom: \"-30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"illinois total confirmed cases\"), React.createElement(\"div\", {\n      style: {\n        margin: \"auto\",\n        marginTop: \"3.5rem\",\n        width: \"50%\",\n        padding: \"10px\",\n        marginBottom: \"2.0rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      width: 500,\n      height: 300,\n      data: il_data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"confirmed\",\n      stroke: \"#8884d8\",\n      activeDot: {\n        r: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/seokhyunkim/Desktop/projects/coronavirus/src/components/Home/Charts.js"],"names":["React","PureComponent","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Example","constructor","getUSTotalCases","cases","isUS","val","Country_Region","filtered","filter","sum","forEach","elem","Confirmed","casesByState","s","charAt","toUpperCase","slice","state","Province_State","cases1","cases2","cases3","cases4","cases5","componentDidMount","fetch","then","res","json","setState","render","us_data","il_data","length","name","Last_Update","substring","confirmed","marginTop","textAlign","textTransform","marginBottom","margin","width","padding","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\n\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nexport default class Example extends PureComponent {\n  constructor() {\n    super();\n    // cases in date order from 1 to 5. Cases5 is the latest.\n    this.state = {\n      cases1: [],\n      cases2: [],\n      cases3: [],\n      cases4: [],\n      cases5: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/cases1\")\n      .then(res => res.json())\n      .then(cases1 => this.setState({ cases1 }));\n\n    fetch(\"http://localhost:5000/cases2\")\n      .then(res => res.json())\n      .then(cases2 => this.setState({ cases2 }));\n\n    fetch(\"http://localhost:5000/cases3\")\n      .then(res => res.json())\n      .then(cases3 => this.setState({ cases3 }));\n\n    fetch(\"http://localhost:5000/cases4\")\n      .then(res => res.json())\n      .then(cases4 => this.setState({ cases4 }));\n\n    fetch(\"http://localhost:5000/cases5\")\n      .then(res => res.json())\n      .then(cases5 => this.setState({ cases5 }));\n  }\n\n  // get the total number of confirmed cases in the US\n  getUSTotalCases = cases => {\n    function isUS(val) {\n      return val.Country_Region === \"US\";\n    }\n    let filtered = cases.filter(isUS);\n    let sum = 0;\n    filtered.forEach(elem => (sum = sum + elem.Confirmed));\n    return sum;\n  };\n\n  // get the total number of confirmed cases in the US by state\n  casesByState = s => {\n    s = s.charAt(0).toUpperCase() + s.slice(1);\n    let filtered = this.state.cases.filter(elem => elem.Province_State === s);\n    let sum = 0;\n    filtered.forEach(elem => (sum = sum + elem.Confirmed));\n    return sum;\n  };\n\n  render() {\n    const { cases1, cases2, cases3, cases4, cases5 } = this.state;\n\n    let us_data = [],\n      il_data = [];\n    if (\n      cases1.length > 0 &&\n      cases2.length > 0 &&\n      cases3.length > 0 &&\n      cases4.length > 0 &&\n      cases5.length > 0\n    ) {\n      us_data = [\n        {\n          name: cases1[0].Last_Update.substring(0, 11),\n          confirmed: this.getUSTotalCases(cases1)\n        },\n        {\n          name: cases2[0].Last_Update.substring(0, 11),\n          confirmed: this.getUSTotalCases(cases2)\n        },\n        {\n          name: cases3[0].Last_Update.substring(0, 11),\n          confirmed: this.getUSTotalCases(cases3)\n        },\n        {\n          name: cases4[0].Last_Update.substring(0, 11),\n          confirmed: this.getUSTotalCases(cases4)\n        },\n        {\n          name: cases5[0].Last_Update.substring(0, 11),\n          confirmed: this.getUSTotalCases(cases5)\n        }\n      ];\n    }\n    return (\n      <div className=\"row\" style={{ marginTop: \"3.5rem\" }}>\n        {/* US cases chart */}\n\n        <div className=\"col-sm\">\n          <h4\n            style={{\n              textAlign: \"center\",\n              textTransform: \"capitalize\",\n              marginBottom: \"-30px\"\n            }}\n          >\n            US total confirmed cases\n          </h4>\n          <div\n            style={{\n              margin: \"auto\",\n              marginTop: \"3.5rem\",\n              marginBottom: \"2.0rem\",\n              width: \"50%\",\n              padding: \"10px\"\n            }}\n          >\n            <LineChart\n              width={500}\n              height={300}\n              data={us_data}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line\n                type=\"monotone\"\n                dataKey=\"confirmed\"\n                stroke=\"#8884d8\"\n                activeDot={{ r: 5 }}\n              />\n            </LineChart>\n          </div>\n        </div>\n\n        {/* Illinois cases chart */}\n\n        <div className=\"col-sm\">\n          <h4\n            style={{\n              textAlign: \"center\",\n              textTransform: \"capitalize\",\n              marginBottom: \"-30px\"\n            }}\n          >\n            illinois total confirmed cases\n          </h4>\n          <div\n            style={{\n              margin: \"auto\",\n              marginTop: \"3.5rem\",\n              width: \"50%\",\n              padding: \"10px\",\n              marginBottom: \"2.0rem\"\n            }}\n          >\n            <LineChart\n              width={500}\n              height={300}\n              data={il_data}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line\n                type=\"monotone\"\n                dataKey=\"confirmed\"\n                stroke=\"#8884d8\"\n                activeDot={{ r: 5 }}\n              />\n            </LineChart>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}